// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.android.model.responses.base.pagination

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class PagesLinksJsonAdapter(
  moshi: Moshi
) : JsonAdapter<PagesLinks>() {
  private val options: JsonReader.Options = JsonReader.Options.of("first", "last", "prev", "next")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "first")

  public override fun toString(): String = buildString(32) {
      append("GeneratedJsonAdapter(").append("PagesLinks").append(')') }

  public override fun fromJson(reader: JsonReader): PagesLinks {
    var first: String? = null
    var last: String? = null
    var previous: String? = null
    var next: String? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> first = nullableStringAdapter.fromJson(reader)
        1 -> last = nullableStringAdapter.fromJson(reader)
        2 -> previous = nullableStringAdapter.fromJson(reader)
        3 -> next = nullableStringAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return PagesLinks(
        first = first,
        last = last,
        previous = previous,
        next = next
    )
  }

  public override fun toJson(writer: JsonWriter, value_: PagesLinks?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("first")
    nullableStringAdapter.toJson(writer, value_.first)
    writer.name("last")
    nullableStringAdapter.toJson(writer, value_.last)
    writer.name("prev")
    nullableStringAdapter.toJson(writer, value_.previous)
    writer.name("next")
    nullableStringAdapter.toJson(writer, value_.next)
    writer.endObject()
  }
}
