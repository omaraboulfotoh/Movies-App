// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.android.model.responses.base.pagination

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import java.lang.reflect.Type
import kotlin.Array
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

public class PaginatedArrayResponseWrapperJsonAdapter<T>(
  moshi: Moshi,
  types: Array<Type>
) : JsonAdapter<PaginatedArrayResponseWrapper<T>>() {
  init {
    require(types.size == 1) {
      buildString { append("TypeVariable mismatch: Expecting ").append(1).append(" type for generic type variables [").append("T").append("], but received ").append(types.size) }
    }
  }

  private val options: JsonReader.Options = JsonReader.Options.of("results", "page", "totalPages",
      "totalResults")

  private val listOfTNullableAnyAdapter: JsonAdapter<List<T>> =
      moshi.adapter(Types.newParameterizedType(List::class.java, types[0]), emptySet(), "results")

  private val intAdapter: JsonAdapter<Int> = moshi.adapter(Int::class.java, emptySet(), "page")

  @Volatile
  private var constructorRef: Constructor<PaginatedArrayResponseWrapper<T>>? = null

  public override fun toString(): String = buildString(51) {
      append("GeneratedJsonAdapter(").append("PaginatedArrayResponseWrapper").append(')') }

  public override fun fromJson(reader: JsonReader): PaginatedArrayResponseWrapper<T> {
    var results: List<T>? = null
    var page: Int? = 0
    var totalPages: Int? = 0
    var totalResults: Int? = 0
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          results = listOfTNullableAnyAdapter.fromJson(reader) ?:
              throw Util.unexpectedNull("results", "results", reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          page = intAdapter.fromJson(reader) ?: throw Util.unexpectedNull("page", "page", reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          totalPages = intAdapter.fromJson(reader) ?: throw Util.unexpectedNull("totalPages",
              "totalPages", reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        3 -> {
          totalResults = intAdapter.fromJson(reader) ?: throw Util.unexpectedNull("totalResults",
              "totalResults", reader)
          // $mask = $mask and (1 shl 3).inv()
          mask0 = mask0 and 0xfffffff7.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xfffffff0.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  PaginatedArrayResponseWrapper<T>(
          results = results as List<T>,
          page = page as Int,
          totalPages = totalPages as Int,
          totalResults = totalResults as Int
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<PaginatedArrayResponseWrapper<T>> = this.constructorRef ?:
          (PaginatedArrayResponseWrapper::class.java.getDeclaredConstructor(List::class.java,
          Int::class.javaPrimitiveType, Int::class.javaPrimitiveType, Int::class.javaPrimitiveType,
          Int::class.javaPrimitiveType,
          Util.DEFAULT_CONSTRUCTOR_MARKER) as Constructor<PaginatedArrayResponseWrapper<T>>).also {
          this.constructorRef = it }
      return localConstructor.newInstance(
          results,
          page,
          totalPages,
          totalResults,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  public override fun toJson(writer: JsonWriter, value_: PaginatedArrayResponseWrapper<T>?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("results")
    listOfTNullableAnyAdapter.toJson(writer, value_.results)
    writer.name("page")
    intAdapter.toJson(writer, value_.page)
    writer.name("totalPages")
    intAdapter.toJson(writer, value_.totalPages)
    writer.name("totalResults")
    intAdapter.toJson(writer, value_.totalResults)
    writer.endObject()
  }
}
