// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.android.model.movie

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import kotlin.Boolean
import kotlin.Double
import kotlin.Float
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

public class MovieModelJsonAdapter(
  moshi: Moshi
) : JsonAdapter<MovieModel>() {
  private val options: JsonReader.Options = JsonReader.Options.of("id", "original_title", "title",
      "overview", "popularity", "status", "tagline", "homepage", "backdrop_path", "poster_path",
      "release_date", "vote_average", "vote_count", "adult")

  private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.javaObjectType,
      emptySet(), "id")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "originalTitle")

  private val nullableDoubleAdapter: JsonAdapter<Double?> =
      moshi.adapter(Double::class.javaObjectType, emptySet(), "popularity")

  private val nullableFloatAdapter: JsonAdapter<Float?> = moshi.adapter(Float::class.javaObjectType,
      emptySet(), "voteAverage")

  private val nullableBooleanAdapter: JsonAdapter<Boolean?> =
      moshi.adapter(Boolean::class.javaObjectType, emptySet(), "adult")

  @Volatile
  private var constructorRef: Constructor<MovieModel>? = null

  public override fun toString(): String = buildString(32) {
      append("GeneratedJsonAdapter(").append("MovieModel").append(')') }

  public override fun fromJson(reader: JsonReader): MovieModel {
    var id: Int? = null
    var originalTitle: String? = null
    var title: String? = null
    var overview: String? = null
    var popularity: Double? = null
    var status: String? = null
    var tagline: String? = null
    var homepage: String? = null
    var backdrop: String? = null
    var poster: String? = null
    var releaseDate: String? = null
    var voteAverage: Float? = null
    var voteCount: Int? = null
    var adult: Boolean? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          id = nullableIntAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          originalTitle = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          title = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        3 -> {
          overview = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 3).inv()
          mask0 = mask0 and 0xfffffff7.toInt()
        }
        4 -> {
          popularity = nullableDoubleAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 4).inv()
          mask0 = mask0 and 0xffffffef.toInt()
        }
        5 -> {
          status = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 5).inv()
          mask0 = mask0 and 0xffffffdf.toInt()
        }
        6 -> {
          tagline = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 6).inv()
          mask0 = mask0 and 0xffffffbf.toInt()
        }
        7 -> {
          homepage = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 7).inv()
          mask0 = mask0 and 0xffffff7f.toInt()
        }
        8 -> {
          backdrop = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 8).inv()
          mask0 = mask0 and 0xfffffeff.toInt()
        }
        9 -> {
          poster = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 9).inv()
          mask0 = mask0 and 0xfffffdff.toInt()
        }
        10 -> {
          releaseDate = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 10).inv()
          mask0 = mask0 and 0xfffffbff.toInt()
        }
        11 -> {
          voteAverage = nullableFloatAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 11).inv()
          mask0 = mask0 and 0xfffff7ff.toInt()
        }
        12 -> {
          voteCount = nullableIntAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 12).inv()
          mask0 = mask0 and 0xffffefff.toInt()
        }
        13 -> {
          adult = nullableBooleanAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 13).inv()
          mask0 = mask0 and 0xffffdfff.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xffffc000.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  MovieModel(
          id = id,
          originalTitle = originalTitle,
          title = title,
          overview = overview,
          popularity = popularity,
          status = status,
          tagline = tagline,
          homepage = homepage,
          backdrop = backdrop,
          poster = poster,
          releaseDate = releaseDate,
          voteAverage = voteAverage,
          voteCount = voteCount,
          adult = adult
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<MovieModel> = this.constructorRef ?:
          MovieModel::class.java.getDeclaredConstructor(Int::class.javaObjectType,
          String::class.java, String::class.java, String::class.java, Double::class.javaObjectType,
          String::class.java, String::class.java, String::class.java, String::class.java,
          String::class.java, String::class.java, Float::class.javaObjectType,
          Int::class.javaObjectType, Boolean::class.javaObjectType, Int::class.javaPrimitiveType,
          Util.DEFAULT_CONSTRUCTOR_MARKER).also { this.constructorRef = it }
      return localConstructor.newInstance(
          id,
          originalTitle,
          title,
          overview,
          popularity,
          status,
          tagline,
          homepage,
          backdrop,
          poster,
          releaseDate,
          voteAverage,
          voteCount,
          adult,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  public override fun toJson(writer: JsonWriter, value_: MovieModel?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("id")
    nullableIntAdapter.toJson(writer, value_.id)
    writer.name("original_title")
    nullableStringAdapter.toJson(writer, value_.originalTitle)
    writer.name("title")
    nullableStringAdapter.toJson(writer, value_.title)
    writer.name("overview")
    nullableStringAdapter.toJson(writer, value_.overview)
    writer.name("popularity")
    nullableDoubleAdapter.toJson(writer, value_.popularity)
    writer.name("status")
    nullableStringAdapter.toJson(writer, value_.status)
    writer.name("tagline")
    nullableStringAdapter.toJson(writer, value_.tagline)
    writer.name("homepage")
    nullableStringAdapter.toJson(writer, value_.homepage)
    writer.name("backdrop_path")
    nullableStringAdapter.toJson(writer, value_.backdrop)
    writer.name("poster_path")
    nullableStringAdapter.toJson(writer, value_.poster)
    writer.name("release_date")
    nullableStringAdapter.toJson(writer, value_.releaseDate)
    writer.name("vote_average")
    nullableFloatAdapter.toJson(writer, value_.voteAverage)
    writer.name("vote_count")
    nullableIntAdapter.toJson(writer, value_.voteCount)
    writer.name("adult")
    nullableBooleanAdapter.toJson(writer, value_.adult)
    writer.endObject()
  }
}
